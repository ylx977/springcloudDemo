server:
  port: 7901 #指定该Eureka实例的端口号
eureka:
  instance:
    # 是否显示主机的IP
    prefer-ip-address: true
    #在Eureka服务端界面的status一栏显示ip:port的形式, 使用冒号分割的方式，目的是当:前面的变量值获取不到的时候采用冒号后面的值
    # docker中的环境变量如EUREKA_INSTANCE_IP-ADDRESS在这里可以将下划线改成.后读取如eureka.instance.ip-address
    #其实本质是${eureka.instance.ip-address}转化成各种变量去环境变量中去查找，因此EUREKA_INSTANCE_IP-ADDRESS能被匹配上
    instance-id: ${eureka.instance.ip-address:${spring.cloud.client.ipAddress}}:${server.port}
#    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
    # 客户端向服务端发送心跳(服务续约任务)的调用时间间隔, 默认为30秒
    lease-renewal-interval-in-seconds: 30
    # 服务端在收到最后一次心跳之后的等待时间上限(服务时效的时间), 默认为90秒
    lease-expiration-duration-in-seconds: 90
  client:
    service-url:
      defaultZone: http://admin:123456@${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/ #指定Eureka服务端地址
spring:
  application:
    # 指定应用名称
    name: microservice-a
  profiles:
    active: @spring.profiles.active@